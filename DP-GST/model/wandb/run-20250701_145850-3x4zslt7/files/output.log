
Loaded "./../data/tasks_30-num_2000-epsilon_1-delta_0.05/dblp_GST1k-gamma_3-noise/test_split.txt" with 600 lines
Logging to ./model/gst_diffusion/3x4zslt7
/home/sunyahui/anaconda3/envs/difusco/lib/python3.7/site-packages/pytorch_lightning/trainer/connectors/accelerator_connector.py:479: LightningDeprecationWarning: Setting `Trainer(gpus=[0, 3])` is deprecated in v1.7 and will be removed in v2.0. Please use `Trainer(accelerator='gpu', devices=[0, 3])` instead.
  f"Setting `Trainer(gpus={gpus!r})` is deprecated in v1.7 and will be removed"
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
----------------------------------------------------------------------------------------------------
ResidualGatedGCNModel(
  (nodes_coord_embedding): Linear(in_features=1, out_features=256, bias=False)
  (edge_embed): Sequential(
    (0): Linear(in_features=1, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=256, bias=True)
  )
  (gcn_layers): ModuleList(
    (0): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (1): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (2): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (3): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (4): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (5): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (6): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (7): ResidualGatedGCNLayer(
      (node_feat): NodeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (edge_feat): EdgeFeatures(
        (Us): Linear(in_features=256, out_features=256, bias=True)
        (Vs): Linear(in_features=256, out_features=256, bias=True)
      )
      (bn_node): BatchNormNode(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
      (bn_edge): BatchNormEdge(
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (mlp_edges): MLP(
    (layers): Sequential()
    (output): Linear(in_features=256, out_features=1, bias=True)
    (out): Sequential(
      (0): GroupNorm32(32, 256, eps=1e-05, affine=True)
      (1): ReLU()
      (2): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
----------------------------------------------------------------------------------------------------
Traceback (most recent call last):
  File "train.py", line 167, in <module>
    main(args)
  File "train.py", line 159, in main
    model = model_class.load_from_checkpoint(ckpt_path, param_args=args)
  File "/home/sunyahui/anaconda3/envs/difusco/lib/python3.7/site-packages/pytorch_lightning/core/saving.py", line 145, in load_from_checkpoint
    **kwargs,
  File "/home/sunyahui/anaconda3/envs/difusco/lib/python3.7/site-packages/pytorch_lightning/core/saving.py", line 188, in _load_from_checkpoint
    return _load_state(cls, checkpoint, strict=strict, **kwargs)
  File "/home/sunyahui/anaconda3/envs/difusco/lib/python3.7/site-packages/pytorch_lightning/core/saving.py", line 247, in _load_state
    keys = obj.load_state_dict(checkpoint["state_dict"], strict=strict)
  File "/home/sunyahui/anaconda3/envs/difusco/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for GcnModel:
	Unexpected key(s) in state_dict: "model.edges_values_embedding.weight", "model.edges_embedding.weight", "model.gcn_layers.0.node_feat.U.weight", "model.gcn_layers.0.node_feat.U.bias", "model.gcn_layers.0.node_feat.V.weight", "model.gcn_layers.0.node_feat.V.bias", "model.gcn_layers.0.edge_feat.U.weight", "model.gcn_layers.0.edge_feat.U.bias", "model.gcn_layers.0.edge_feat.V.weight", "model.gcn_layers.0.edge_feat.V.bias", "model.gcn_layers.0.bn_node.batch_norm.weight", "model.gcn_layers.0.bn_node.batch_norm.bias", "model.gcn_layers.0.bn_edge.batch_norm.weight", "model.gcn_layers.0.bn_edge.batch_norm.bias", "model.gcn_layers.1.node_feat.U.weight", "model.gcn_layers.1.node_feat.U.bias", "model.gcn_layers.1.node_feat.V.weight", "model.gcn_layers.1.node_feat.V.bias", "model.gcn_layers.1.edge_feat.U.weight", "model.gcn_layers.1.edge_feat.U.bias", "model.gcn_layers.1.edge_feat.V.weight", "model.gcn_layers.1.edge_feat.V.bias", "model.gcn_layers.1.bn_node.batch_norm.weight", "model.gcn_layers.1.bn_node.batch_norm.bias", "model.gcn_layers.1.bn_edge.batch_norm.weight", "model.gcn_layers.1.bn_edge.batch_norm.bias", "model.gcn_layers.2.node_feat.U.weight", "model.gcn_layers.2.node_feat.U.bias", "model.gcn_layers.2.node_feat.V.weight", "model.gcn_layers.2.node_feat.V.bias", "model.gcn_layers.2.edge_feat.U.weight", "model.gcn_layers.2.edge_feat.U.bias", "model.gcn_layers.2.edge_feat.V.weight", "model.gcn_layers.2.edge_feat.V.bias", "model.gcn_layers.2.bn_node.batch_norm.weight", "model.gcn_layers.2.bn_node.batch_norm.bias", "model.gcn_layers.2.bn_edge.batch_norm.weight", "model.gcn_layers.2.bn_edge.batch_norm.bias", "model.gcn_layers.3.node_feat.U.weight", "model.gcn_layers.3.node_feat.U.bias", "model.gcn_layers.3.node_feat.V.weight", "model.gcn_layers.3.node_feat.V.bias", "model.gcn_layers.3.edge_feat.U.weight", "model.gcn_layers.3.edge_feat.U.bias", "model.gcn_layers.3.edge_feat.V.weight", "model.gcn_layers.3.edge_feat.V.bias", "model.gcn_layers.3.bn_node.batch_norm.weight", "model.gcn_layers.3.bn_node.batch_norm.bias", "model.gcn_layers.3.bn_edge.batch_norm.weight", "model.gcn_layers.3.bn_edge.batch_norm.bias", "model.gcn_layers.4.node_feat.U.weight", "model.gcn_layers.4.node_feat.U.bias", "model.gcn_layers.4.node_feat.V.weight", "model.gcn_layers.4.node_feat.V.bias", "model.gcn_layers.4.edge_feat.U.weight", "model.gcn_layers.4.edge_feat.U.bias", "model.gcn_layers.4.edge_feat.V.weight", "model.gcn_layers.4.edge_feat.V.bias", "model.gcn_layers.4.bn_node.batch_norm.weight", "model.gcn_layers.4.bn_node.batch_norm.bias", "model.gcn_layers.4.bn_edge.batch_norm.weight", "model.gcn_layers.4.bn_edge.batch_norm.bias", "model.gcn_layers.5.node_feat.U.weight", "model.gcn_layers.5.node_feat.U.bias", "model.gcn_layers.5.node_feat.V.weight", "model.gcn_layers.5.node_feat.V.bias", "model.gcn_layers.5.edge_feat.U.weight", "model.gcn_layers.5.edge_feat.U.bias", "model.gcn_layers.5.edge_feat.V.weight", "model.gcn_layers.5.edge_feat.V.bias", "model.gcn_layers.5.bn_node.batch_norm.weight", "model.gcn_layers.5.bn_node.batch_norm.bias", "model.gcn_layers.5.bn_edge.batch_norm.weight", "model.gcn_layers.5.bn_edge.batch_norm.bias", "model.gcn_layers.6.node_feat.U.weight", "model.gcn_layers.6.node_feat.U.bias", "model.gcn_layers.6.node_feat.V.weight", "model.gcn_layers.6.node_feat.V.bias", "model.gcn_layers.6.edge_feat.U.weight", "model.gcn_layers.6.edge_feat.U.bias", "model.gcn_layers.6.edge_feat.V.weight", "model.gcn_layers.6.edge_feat.V.bias", "model.gcn_layers.6.bn_node.batch_norm.weight", "model.gcn_layers.6.bn_node.batch_norm.bias", "model.gcn_layers.6.bn_edge.batch_norm.weight", "model.gcn_layers.6.bn_edge.batch_norm.bias", "model.gcn_layers.7.node_feat.U.weight", "model.gcn_layers.7.node_feat.U.bias", "model.gcn_layers.7.node_feat.V.weight", "model.gcn_layers.7.node_feat.V.bias", "model.gcn_layers.7.edge_feat.U.weight", "model.gcn_layers.7.edge_feat.U.bias", "model.gcn_layers.7.edge_feat.V.weight", "model.gcn_layers.7.edge_feat.V.bias", "model.gcn_layers.7.bn_node.batch_norm.weight", "model.gcn_layers.7.bn_node.batch_norm.bias", "model.gcn_layers.7.bn_edge.batch_norm.weight", "model.gcn_layers.7.bn_edge.batch_norm.bias", "model.mlp_edges.V.weight", "model.mlp_edges.V.bias".